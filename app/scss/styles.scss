$primaryColor: orange;

// Importe la feuille de style _header.scss pas besoin de mettre le _
@import 'header';

// Il faut déclarer une mixin AVANT de l'utiliser
@mixin googleFonts($font) {
  @import url('https://fonts.googleapis.com/css2?family=#{$font}');
}

// Fonts
// Déclare la police (font) Roboto de google pour l'utiliser plus bas
@include googleFonts(Roboto);
@include googleFonts('Noto+Sans+TC');

// mixin avec paramètre $degres
@mixin border-radius($degres) {
  -moz-border-radius: $degres;
  -webkit-border-radius: $degres;
  border-radius: $degres;
}

// Définition d'une fonction non native (à définir avant d'appeler)
@function fonctionTest($nombreA, $nombreB) {
  @return $nombreA / $nombreB + $nombreA;
}

body {
  background-color: yellow;
}

footer {
  padding: 50px;
  font-family: 'Roboto', sans-serif;
  background-color: $primaryColor;
  // Appel de la mixin avec précision du paramètre
  @include border-radius(40px);
  // Appel de fonction
  content: fonctionTest(15, 3);

  // Les spans inclus dans le footer
  span {
    color: aliceblue;
    // le & permet de ne pas répéter le span (correspond au this)
    &:hover {
      text-decoration: underline;
    }
  }
}

// Le % permet de faire hériter un bloc de propriétés
// à utiliser quand il n'y a pas de paramètres
%alert {
  border: 1px solid #ccc;
  padding: 15px;
  color: white;
  @include border-radius(10px);
}

.alert-green {
  // le @extend permet d'inclure un bloc de propriétés
  @extend %alert;
  background-color: green;
}
.alert-red {
  @extend %alert;
  font-family: 'Noto+Sans+TC', sans-serif;
  background-color: red;
}

// Bloc de prorpiétéS que l'on peut appeler permet d'utiliser des paramètres
@mixin center {
  margin-left: auto;
  margin-right: auto;
}

#logo {
  width: 135px;
  // @include permet d'importer une mixin
  @include center;
}

#slogan {
  width: 150px;
  @include center;
}
